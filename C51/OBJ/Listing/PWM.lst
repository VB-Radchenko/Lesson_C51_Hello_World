C51 COMPILER V9.57.0.0   PWM                                                               03/04/2023 22:48:29 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN ..\OBJ\PWM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\HANDWARE\PWM\PWM.c LARGE OMF2 OPTIMIZE(3,SIZE) BROWSE INCDIR(..\USER;
                    -..\FUNC_HANDLER;..\GUI_APP;..\HANDWARE\ADC;..\HANDWARE\GPIO;..\HANDWARE\PWM;..\HANDWARE\TIMER;..\HANDWARE\UART) DEBUG PR
                    -INT(..\OBJ\Listing\PWM.lst) TABS(2) OBJECT(..\OBJ\PWM.obj)

line level    source

   1          
   2          //==============================================================================
   3          //---------------------------------Includes-------------------------------------
   4          //==============================================================================
   5          #include "PWM.h"
   6          #include "UART.h"
   7          
   8          //==============================================================================
   9          //---------------------------------Defines--------------------------------------
  10          //==============================================================================
  11          
  12            #define PWM_ACCURACY      0x2042
  13            #define PWM0_SET_ADDR     0x86
  14            #define PWM1_SET_ADDR     0x88
  15            #define PWM0_OUT_ADDR     0x92
  16            #define PWM1_OUT_ADDR     0x93
  17            
  18            
  19            
  20            u8 xdata PWM_out[2];
  21            u8 xdata PWMout[6]={0xaa,0x01,0x20,0x42,0x42};
  22            u16 PWM_O = 0;
  23          //==============================================================================
  24          //---------------------------------- INIT---------------------------------------
  25          //==============================================================================
  26          void PwmInit(u8 freq)
  27          {
  28   1      
  29   1        u8 buff[4] = {0x5A,0x01,(u8)(PWM_ACCURACY>>8),(u8)PWM_ACCURACY};
  30   1        
  31   1        buff[1] = freq;
  32   1        WriteDgusVp(PWM0_SET_ADDR,buff,2);
  33   1        PwmSetDuty(100);
  34   1      }
  35          
  36          
  37          //==============================================================================
  38          //--------------------------------FUNCTIONS-------------------------------------
  39          //==============================================================================
  40          void PwmSetDuty(u16 duty)
  41          {
  42   1        
  43   1        u8 PWM[4]={0x5a,0x01,0x20,0x42};
  44   1        WriteDgusVp(PWM0_SET_ADDR,PWM,2);   //ÉèÖÃÔØ²¨ÆµÂÊ
  45   1        
  46   1        if(duty>100) duty = 100;
  47   1          
  48   1          PWM[2]= (825753/duty)>>8;
  49   1          PWM[3]= (825753/duty);
  50   1          WriteDgusVp(PWM0_SET_ADDR,PWM,2);   //ÉèÖÃÔØ²¨ÆµÂÊ
  51   1          WriteDgusVp(PWM1_SET_ADDR,PWM,2);   //ÉèÖÃÔØ²¨ÆµÂÊ
  52   1          //      PWM_Width= ((1000000/PWM_Value)*PWM_Width/100)-900;
  53   1            
C51 COMPILER V9.57.0.0   PWM                                                               03/04/2023 22:48:29 PAGE 2   

  54   1          PWM_O = (u16)(((float)duty/100.0f) * 8258.0f);
  55   1          PWM_out[0] = PWM_O>>8;
  56   1          PWM_out[1] = PWM_O;
  57   1        
  58   1          WriteDgusVp(PWM0_OUT_ADDR,PWM_out,1);   //ÉèÖÃÔØ²¨ÆµÂÊ
  59   1          WriteDgusVp(PWM1_OUT_ADDR,PWM_out,1);   //ÉèÖÃÔØ²¨ÆµÂÊ
  60   1            
  61   1        PWMout[1] = PWM_O>>8;
  62   1        PWMout[2] = PWM_O;
  63   1        PWMout[3] = PWM_O>>8;
  64   1        PWMout[4] = PWM_O;
  65   1        PWMout[5] = PWM_out[0] + PWM_out[1] + PWM_out[2] + PWM_out[3] + PWM_out[4] ;
  66   1        Uatr_Send_Data(3,PWM_out,6);
  67   1      }
  68          
  69          
  70          
  71          //==============================================================================
  72          //---------------------------------END FILE-------------------------------------
  73          //==============================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    418    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =     10      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
